{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 17,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "grafana-azure-data-explorer-datasource",
        "uid": "${adx}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "OpenAI": false,
          "database": "openteldb",
          "datasource": {
            "type": "grafana-azure-data-explorer-datasource",
            "uid": "${adx}"
          },
          "expression": {
            "groupBy": {
              "expressions": [],
              "type": "and"
            },
            "reduce": {
              "expressions": [],
              "type": "and"
            },
            "where": {
              "expressions": [],
              "type": "and"
            }
          },
          "pluginVersion": "6.0.1",
          "query": "let ErrorSpans = OTELTraces\r\n| where $__timeFilter(StartTime)\r\n| extend ServiceName = tostring(parse_json(ResourceAttributes)[\"service.name\"])\r\n| where tolower(SpanStatus) == \"status_code_error\"\r\n| summarize ErrorSpans = count() by ServiceName, Time = bin(StartTime, 1m);\r\n\r\nlet ErrorLogs = OTELLogs\r\n| where $__timeFilter(Timestamp)\r\n| extend ServiceName = tostring(parse_json(ResourceAttributes)[\"service.name\"])\r\n| where tolower(SeverityText) in (\"error\", \"critical\")\r\n| summarize ErrorLogs = count() by ServiceName, Time = bin(Timestamp, 1m);\r\n\r\nErrorSpans\r\n| join kind=fullouter ErrorLogs on Time, ServiceName\r\n| sort by Time asc\r\n| where ErrorSpans != \"\" or ErrorLogs != \"\"\r\n| where ServiceName != \"\"\r\n| project Time, ServiceName, ErrorSpans, ErrorLogs",
          "querySource": "raw",
          "queryType": "KQL",
          "rawMode": true,
          "refId": "A",
          "resultFormat": "table"
        }
      ],
      "title": "Correlated Error Counts",
      "type": "table"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 6
      },
      "id": 4,
      "panels": [
        {
          "datasource": {
            "type": "grafana-azure-data-explorer-datasource",
            "uid": "${adx}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": true,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 24,
            "x": 0,
            "y": 7
          },
          "id": 2,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true
          },
          "pluginVersion": "11.4.0",
          "targets": [
            {
              "OpenAI": false,
              "database": "openteldb",
              "datasource": {
                "type": "grafana-azure-data-explorer-datasource",
                "uid": "${adx}"
              },
              "expression": {
                "groupBy": {
                  "expressions": [],
                  "type": "and"
                },
                "reduce": {
                  "expressions": [],
                  "type": "and"
                },
                "where": {
                  "expressions": [],
                  "type": "and"
                }
              },
              "hide": false,
              "pluginVersion": "6.0.1",
              "query": "let SelectedTime = todatetime(\"${timestamp}\");\r\nOTELTraces\r\n| where StartTime between (SelectedTime - 30s .. SelectedTime + 30s)\r\n| sort by StartTime desc\r\n| extend ServiceName = tostring(parse_json(ResourceAttributes)[\"service.name\"])\r\n| where ServiceName == \"${service}\"\r\n| project StartTime, EndTime, TraceID, ServiceName",
              "querySource": "raw",
              "queryType": "KQL",
              "rawMode": true,
              "refId": "A",
              "resultFormat": "table"
            }
          ],
          "title": "${service} Traces",
          "type": "table"
        },
        {
          "datasource": {
            "type": "jaeger",
            "uid": "${jaeger}"
          },
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 19,
            "w": 24,
            "x": 0,
            "y": 14
          },
          "id": 3,
          "options": {},
          "pluginVersion": "11.4.0",
          "targets": [
            {
              "datasource": {
                "type": "jaeger",
                "uid": "${jaeger}"
              },
              "query": "${trace}",
              "refId": "A"
            }
          ],
          "title": "Trace Data",
          "type": "traces"
        }
      ],
      "title": "Tracing",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 7
      },
      "id": 6,
      "panels": [
        {
          "datasource": {
            "type": "grafana-azure-data-explorer-datasource",
            "uid": "${adx}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto",
                  "wrapText": true
                },
                "filterable": true,
                "inspect": true
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "SeverityText"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 116
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Timestamp"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 198
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "ServiceName"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 172
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 11,
            "w": 24,
            "x": 0,
            "y": 8
          },
          "id": 5,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "ServiceName"
              }
            ]
          },
          "pluginVersion": "11.4.0",
          "targets": [
            {
              "OpenAI": false,
              "database": "openteldb",
              "datasource": {
                "type": "grafana-azure-data-explorer-datasource",
                "uid": "${adx}"
              },
              "expression": {
                "groupBy": {
                  "expressions": [],
                  "type": "and"
                },
                "reduce": {
                  "expressions": [],
                  "type": "and"
                },
                "where": {
                  "expressions": [],
                  "type": "and"
                }
              },
              "hide": false,
              "pluginVersion": "6.0.1",
              "query": "let SelectedTime = todatetime(\"${timestamp}\");\r\nOTELLogs\r\n| where Timestamp  between (SelectedTime - 30s .. SelectedTime + 30s)\r\n| sort by Timestamp desc\r\n| extend ServiceName = tostring(parse_json(ResourceAttributes)[\"service.name\"])\r\n| where ServiceName == \"${service}\"\r\n| sort by ServiceName desc\r\n| project Timestamp, ServiceName, SeverityText, Body",
              "querySource": "raw",
              "queryType": "KQL",
              "rawMode": true,
              "refId": "A",
              "resultFormat": "table"
            }
          ],
          "title": "${service} Logs",
          "type": "table"
        }
      ],
      "title": "Logging",
      "type": "row"
    }
  ],
  "preload": false,
  "schemaVersion": 40,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "text": "Jaeger",
          "value": "EbPG8fYoz"
        },
        "label": "Jaeger Data Source",
        "name": "jaeger",
        "options": [],
        "query": "jaeger",
        "refresh": 1,
        "regex": "",
        "type": "datasource"
      },
      {
        "current": {
          "text": "Azure Data Explorer",
          "value": "OBS360DataSource"
        },
        "label": "ADX Data Source",
        "name": "adx",
        "options": [],
        "query": "grafana-azure-data-explorer-datasource",
        "refresh": 1,
        "regex": "",
        "type": "datasource"
      },
      {
        "current": {
          "text": "",
          "value": ""
        },
        "datasource": {
          "type": "grafana-azure-data-explorer-datasource",
          "uid": "${adx}"
        },
        "definition": "OTELTraces\r\n| where $__timeFilter(StartTime)\r\n| extend ServiceName = tostring(parse_json(ResourceAttributes)[\"service.name\"])\r\n| summarize count()by ServiceName\r\n| project ServiceName",
        "label": "Service",
        "name": "service",
        "options": [],
        "query": {
          "OpenAI": false,
          "clusterUri": "",
          "database": "openteldb",
          "expression": {
            "groupBy": {
              "expressions": [],
              "type": "and"
            },
            "reduce": {
              "expressions": [],
              "type": "and"
            },
            "where": {
              "expressions": [],
              "type": "and"
            }
          },
          "pluginVersion": "6.0.1",
          "query": "OTELTraces\r\n| where $__timeFilter(StartTime)\r\n| extend ServiceName = tostring(parse_json(ResourceAttributes)[\"service.name\"])\r\n| summarize count()by ServiceName\r\n| project ServiceName",
          "querySource": "raw",
          "queryType": "KQL",
          "rawMode": true,
          "resultFormat": "table"
        },
        "refresh": 2,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "",
          "value": ""
        },
        "datasource": {
          "type": "grafana-azure-data-explorer-datasource",
          "uid": "${adx}"
        },
        "definition": "let ErrorSpans = OTELTraces\r\n| where $__timeFilter(StartTime)\r\n| where tolower(SpanStatus) == \"status_code_error\"\r\n| summarize ErrorSpans = count() by Time = bin(StartTime, 1m);\r\nlet ErrorLogs = OTELLogs\r\n| where $__timeFilter(Timestamp)\r\n| where tolower(SeverityText) in (\"error\", \"critical\")\r\n| summarize ErrorLogs = count() by Time = bin(Timestamp, 1m);\r\nlet CPUMetrics = OTELMetrics\r\n| where $__timeFilter(Timestamp)\r\n| where MetricName == \"container.cpu.utilization\"\r\n| summarize AvgCPU = avg(MetricValue) by Time = bin(Timestamp, 1m);\r\nErrorSpans\r\n| join kind=fullouter ErrorLogs on Time\r\n| join kind=fullouter CPUMetrics on Time\r\n| sort by Time desc\r\n| where ErrorSpans != \"\" or ErrorLogs != \"\"\r\n| project tostring(Time)",
        "label": "Time Of Error",
        "name": "timestamp",
        "options": [],
        "query": {
          "OpenAI": false,
          "clusterUri": "",
          "database": "openteldb",
          "expression": {
            "groupBy": {
              "expressions": [],
              "type": "and"
            },
            "reduce": {
              "expressions": [],
              "type": "and"
            },
            "where": {
              "expressions": [],
              "type": "and"
            }
          },
          "pluginVersion": "6.0.1",
          "query": "let ErrorSpans = OTELTraces\r\n| where $__timeFilter(StartTime)\r\n| where tolower(SpanStatus) == \"status_code_error\"\r\n| summarize ErrorSpans = count() by Time = bin(StartTime, 1m);\r\nlet ErrorLogs = OTELLogs\r\n| where $__timeFilter(Timestamp)\r\n| where tolower(SeverityText) in (\"error\", \"critical\")\r\n| summarize ErrorLogs = count() by Time = bin(Timestamp, 1m);\r\nlet CPUMetrics = OTELMetrics\r\n| where $__timeFilter(Timestamp)\r\n| where MetricName == \"container.cpu.utilization\"\r\n| summarize AvgCPU = avg(MetricValue) by Time = bin(Timestamp, 1m);\r\nErrorSpans\r\n| join kind=fullouter ErrorLogs on Time\r\n| join kind=fullouter CPUMetrics on Time\r\n| sort by Time desc\r\n| where ErrorSpans != \"\" or ErrorLogs != \"\"\r\n| project tostring(Time)",
          "querySource": "raw",
          "queryType": "KQL",
          "rawMode": true,
          "resultFormat": "table"
        },
        "refresh": 2,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "",
          "value": ""
        },
        "datasource": {
          "type": "grafana-azure-data-explorer-datasource",
          "uid": "${adx}"
        },
        "definition": "let SelectedTime = todatetime(\"${timestamp}\");\r\nOTELTraces\r\n| where StartTime between (SelectedTime - 30s .. SelectedTime + 30s)\r\n| sort by StartTime desc\r\n| extend ServiceName = tostring(parse_json(ResourceAttributes)[\"service.name\"])\r\n| where ServiceName == \"${service}\"\r\n| project TraceID",
        "label": "Trace ID",
        "name": "trace",
        "options": [],
        "query": {
          "OpenAI": false,
          "clusterUri": "",
          "database": "openteldb",
          "expression": {
            "groupBy": {
              "expressions": [],
              "type": "and"
            },
            "reduce": {
              "expressions": [],
              "type": "and"
            },
            "where": {
              "expressions": [],
              "type": "and"
            }
          },
          "pluginVersion": "6.0.1",
          "query": "let SelectedTime = todatetime(\"${timestamp}\");\r\nOTELTraces\r\n| where StartTime between (SelectedTime - 30s .. SelectedTime + 30s)\r\n| sort by StartTime desc\r\n| extend ServiceName = tostring(parse_json(ResourceAttributes)[\"service.name\"])\r\n| where ServiceName == \"${service}\"\r\n| project TraceID",
          "querySource": "raw",
          "queryType": "KQL",
          "rawMode": true,
          "resultFormat": "table"
        },
        "refresh": 2,
        "regex": "",
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-15m",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Correlated Observability",
  "uid": "den5jm0cw2mtca",
  "version": 8,
  "weekStart": ""
}